<script type="text/javascript">
if (typeof Salor == 'undefined') {
  var Salor = {
                dataRead: { connect: function () {}},
                payLifeSend: function () {}
  };
}
/* 
  Structs for PayLife
*/
var transaction_complete = false;
var transaction_failed = false;
var last_enq = 0; //1hm of the last time we got a enq from the device,
// used to see if the connection is dead. 1 is tacked on the beginning for fun
// and profit.
// This is for ordering the fields in the struct for when it gets converted to a string
var forder = ['sa',  'version', 'euro',  'ind', 'betrag', 'nummer', 'personal',    
                      'konto', 'ausnahme', 'ware', 'verzogerung', 'mmmm', 'handel'];
// Regex patterns and the order of indexes in the array of matches
// because JS doesn't allow named capture groups
var patterns = [
  { 
    regex: new RegExp(/STX (P)..(\d)(.{40})(.{16})(.{3})(.+) ETX/),
    names: ['sa','ind','result','text','nummer','zusatz']
  }, // Successful debit card
  { 
    regex: new RegExp(/STX (M)\d\d(.)(\d)(.{20})(.{21})(.{5})(.)(.{16})(.{8})(.{6})(.{6})(.{20})(\d{8})(.{8})(.{6})(.{16}).+ ETX/),
    names: ['sa','ind','nummer','name','karte','ablauf','lese','uid','tid','beleg','genehm','result','total','betr','bel','text']
  },
  {
    regex: new RegExp(/STX (N)(\d{3})(.{5,16})(\d) ETX/), // Failed debit
    names: ['sa','code','text','ref']
  }, 
  {
    regex: new RegExp(/STX (L|S)(\d{2})(.)(\d)(.{16})(\d) ETX/),// Credit Failure
    names: ['sa','xxx','ind','nummer','text']
  }, 
  {
    regex: new RegExp(/STX (J)(\d{2})(\d)(.{1,124}) ETX/),// Journal Struct
    names: ['sa','address','ind','text']
  } 
]

E 1 1 U 00003295 1 23 01 0 99 000000
var paylife_struct = {
  sa: 'E',
  version: '1',
  euro: '1',
  ind: 'U',
  betrag: '00000900', // This changes with each total
  nummer: '2', // This can usually stay the same, as we are not
  // processing multiple sales on the same device at the same time
  personal: '00', // The cash register id goes here
  konto: '01', // This is a store conf variable
  ausnahme: '0',
  ware: '99',
  verzogerung: '000000'
  // not sure what this will be useful for...
}
var message_queue = []; // structs go here to be sent asychronously to the
// payment device
var received_msgs = []; // for managing structs we've received as the
// device spams us...
var ending_day = false;
function bycard_update_order(obj) {
  if (obj['sa'] == 'P' || obj['sa'] == 'M') {
    var estring = "field=p_text&klass=Order&value=" + obj["text"];
    get('/vendors/edit_field_on_child?' +  estring, 'bycard_js:<%= __LINE__ %>');
    var estring = "field=p_result&klass=Order&value=" + obj["result"];
    get('/vendors/edit_field_on_child?' +  estring, 'bycard_js:<%= __LINE__ %>');
    if (obj['sa'] == 'P') {
      var estring = "field=p_struct&klass=Order&value=" + obj["msg"];
      get('/vendors/edit_field_on_child?' +  estring, 'bycard_js:<%= __LINE__ %>');
    }  
    if (obj['sa'] == 'M') {
      var estring = "field=m_struct&klass=Order&value=" + obj["msg"];
      get('/vendors/edit_field_on_child?' +  estring, 'bycard_js:<%= __LINE__ %>');
    }
  }
  if (obj['sa'] == 'J') {
    var estring = "field=j_struct&klass=Order&value=" + obj["msg"];
    get('/vendors/edit_field_on_child?' +  estring, 'bycard_js:<%= __LINE__ %>');
     var estring = "field=j_text&klass=Order&value=" + obj["text"];
    get('/vendors/edit_field_on_child?' +  estring, 'bycard_js:<%= __LINE__ %>');
    var estring = "field=j_ind&klass=Order&value=" + obj["ind"];
    get('/vendors/edit_field_on_child?' +  estring, 'bycard_js:<%= __LINE__ %>');
  }
}
function note(txt) {
  $('.note').html(txt);
}
function bycard_endday() {
  ending_day = true;
  bycard_show_waiting();
  $('.bycard-msg').html("<%= I18n.t("views.notice.paylife_ending_day") %>");
  var eod = {  
    sa: 'A',
    version: '1',
    euro: '0',
    ind: 5,
    betrag: '00000000', // This changes with each total
  nummer: '0', // This can usually stay the same, as we are not
  // processing multiple sales on the same device at the same time
  personal: '00', // The cash register id goes here
  konto: '01', // This is a store conf variable
  ausnahme: '0',
  ware: '99',
  verzogerung: '000000'
  };
  //message_queue.push(eod);
  transaction_complete = false;
  test();
}
function parseMsg(txt) {
  try {
  var obj = {};
  if (txt.length < 10) {
    return;
  } else {
    note(txt.length);
  }
  for (var i in patterns) {
    matches = patterns[i]['regex'].exec(txt);
    if (matches) {
      // i.e. we don't want to bother with msgs we have already
      // seen, so we push them onto an array that is initialized at
      // the beginning of ever start of an order.
      x = 1;
      for (var j in patterns[i]['names']) {
        obj[patterns[i]['names'][j]] = matches[x];
        x++;
      }
      obj['msg'] = encodeURI(matches[0]);
      if (received_msgs.indexOf(obj['msg']) != -1) {
        return false;
      } else {
        received_msgs.push(obj['msg']);
      }
      return obj;
    } else {
     alert(patterns[i]['regex'] + " does not match " + txt);
    }
  }
  return false;
  } catch (e) {
    alert(e);
  }
}
/* 
  Generic Functions
*/
var state = 'ready'; // States are: ready to send, waiting for response, paid waiting for journal
function struct2string(struct) {
  var str = '';
  for (var i in forder) {
    if (struct[forder[i]]) {
      str = str + struct[forder[i]];
    }
  }
  return str;
}
function bycard_show() {
  ending_day = false;
  var center = {x: $('#complete_order').position().left,y: $('#complete_order').position().top + 100};
  var button = $('<div id="bycard_button" class="bycard-button"><img src="/images/icons/credit_card_64.png" /></div>');
  button.css({position: 'absolute',top: center.y, left: center.x + $('#complete_order').width() + 25});
  button.mousedown(function () {
    bycard_send();
   //bycard_show_waiting();
                   //test();
  });
  $('body').append(button);
  received_msgs = [];
  transaction_complete = false;
}
function bycard_hide() {
  $('#bycard_button').remove();
}
function bycard_send() {
  var amt = $('.bycard-amount').val();
  var chk = new RegExp(/\d[\,\.]\d$/);
  var m = chk.exec(amt);
  if (m) {
    amt = amt + '0';
  }
  var chk = new RegExp(/^\d+$/);
  var m = chk.exec(amt);
  if (m) {
    amt = amt + '.00';
  }
  amt = amt.replace(',','');
  amt = amt.replace('.','');
  while (amt.length < 8) {
    amt = '0' + amt;
  }
  paylife_struct['betrag'] = amt;
 message_queue.push(paylife_struct);
 transaction_complete = false;
 bycard_show_waiting();
}
function bycard_handle_obj(obj) {
  if (obj['sa'] == 'P' || obj['sa'] == 'M' || obj['sa'] == 'J') {
    var txt = JSON.stringify(obj);
    $.ajax({
      url: '/orders/bancomat',
      type: 'post',
      data: {msg: JSON.stringify(obj)},
      context: document.body,
      success: function () {
        
      },
      error: function(jqXHR, textStatus, errorThrown) {
        alert(textStatus + "--" + errorThrown + "\nCalled from: bycard_js \nURL: " + url);
      }
    });
    if (obj['sa'] == 'P' || obj['sa'] == 'M') {
      if (obj['sa'] == 'P' && obj['ind'] == 2 && ending_day == true) {
        bycard_show_waiting();
        $('.bycard-msg').html("<%= I18n.t("views.notice.paylife_endday_complete") %> " + obj['text']);
        return;
      }
      if (obj['sa'] == 'P' && (obj['ind'] == 0 || obj['ind'] == 7)) {
        transaction_complete = true;
        Salor.payLifeSend("ACK");
        bycard_show_waiting();
        $(".bycard-msg").html("<%= I18n.t("views.notice.transaction_succeeded") %> <%= I18n.t("views.notice.please_wait") %>");
        bycard_update_order(obj);
        if (typeof(CustomerScreen) != 'undefined') {
          CustomerScreen.refresh("http://salor/orders/"+ $('.order-id').html() +"/customer_display",800,480);
        } 
      } else {
        //Kein result
      }
    }
    if (obj['sa'] == 'J' && transaction_complete == true) {
      Salor.payLifeSend("FF");
      Salor.payLifeSend("CR");
      transaction_complete = false;
      received_msgs = [];
      bycard_update_order(obj);
      complete_order_send();
      bycard_hide_waiting();
    }
    if (obj['sa'] == 'J' && transaction_failed == true) {
      transaction_failed = false;
      Salor.payLifeSend("FF");
      Salor.payLifeSend("CR");
    }
    if (obj['sa'] == 'J' && ending_day == true) {
      ending_day = false;
      Salor.payLifeSend("FF");
      Salor.payLifeSend("CR");
      bycard_hide_waiting();
      bycard_update_order(obj);
    }
  } else if (obj['sa'] == 'N' || obj['sa'] == 'L') {
    Salor.payLifeSend("ACK");
    transaction_complete = false;
    transaction_failed = true;
    received_msgs = [];
    bycard_show_waiting();
    $('.bycard-msg').html(obj['text']);
  }
}
function bycard_show_waiting() {
  if ($('bycard-waiting').length == 0) {
  var wdiv = $('<div class="bycard-waiting"></div>');
  var wimg = $("<img src='/images/upload.gif' class='pointer'/>");
  wimg.mousedown(function () {
        bycard_hide_waiting();       
  });
  var msgd = $('<div class="bycard-msg"> </div>');
  wdiv.append(wimg);
  wdiv.append(msgd);
  $("body").append(wdiv);
  } else {
    msgd = $('.bycard-msg');
    wdiv = $('.bycard-waiting');
  }
  msgd.html("<%= I18n.t("views.notice.please_wait") %>");
}

function bycard_hide_waiting() {
  $(".bycard-waiting").remove();
}
$(function () {
  if (!$('body').hasClass("paylife-done")) {
    Salor.dataRead.connect(function (src,data) {
       if (data == 'ENQ') {
          var t = new Date();
          last_enq = parseInt('1' + t.getMinutes() + '' + t.getSeconds());
          $('#bycard_settings').remove();
         if (message_queue.length > 0) {
           struct = message_queue.pop();
           Salor.payLifeSend(struct2string( struct ));
         } else {
           Salor.payLifeSend("ACK");
         }
       } else {
         obj = parseMsg(data);
         if (obj) {
           bycard_handle_obj(obj);
         }
       }
    });
    Salor.payLifeStart('<%= GlobalData.salor_user.meta.cash_register.bank_machine_path %>');
    setInterval(checkConnection,2000);
  }
});
function test() {
  var obj = parseMsg(' STX P112TES:        5,50           142532 111122TES:        5,500 ETX R');
  bycard_handle_obj(obj)
}
function checkConnection() {
  var t = new Date();
  ct = parseInt('1' + t.getMinutes() + '' + t.getSeconds());
  if (ct > last_enq + 20) {
      bycard_settings_show();
  }
}
function bycard_settings_show() {
  $('#bycard_settings').remove();
  var frame = $('<div id="bycard_settings"></div>');
  var ndiv = $("<div class='note'> </div>");
  ndiv.html("<%= I18n.t("views.notice.artema_hybrid_lost") %>");
  var bdiv = $('<div class="button-row"></div>');
  var entries = Salor.ls("/dev",["ttyUSB*"]);
  for (e in entries) {
    var btn = $('<div class="generic-button">'+ entries[e] + '</div>');
    btn.attr('path',entries[e]);
    btn.mousedown(function () {
      Salor.payLifeStart('/dev/' + $(this).attr('path'));              
    });
    bdiv.append(btn);
  }
  frame.append(ndiv);
  frame.append(bdiv);
  frame.css({position: 'absolute', top: 200, left: '10%', width: '80%', 'z-index': 1005});
  $('body').append(frame);
  frame.show();
}
</script>
