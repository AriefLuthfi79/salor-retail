<script type="text/javascript">
var enteredSku = "";

$(document).ready(function () {
  handleKeyboardEnter = false;
  // check submit status when keystrokes entered
  $(".text-input").keyup(function(){
    setState();
  });
  $("#quantity_reset_button").click(function(){
    clearAll();
  });
  try {
    $('#sku').val('');
    focusInput($('#sku'));
  } catch (err) {
        txt="There was an error on this page update_real_quantity.\n\n";
        txt+="Error description: " + err.description + "\n\n";
        txt+="Click OK to continue.\n\n";
        alert(txt);
  }
  setState();
});

function setState(state) {
  var qty = parseInt($("#quantity").val());
  var confButton = $("#quantity_confirm_button");
  $(confButton).unbind("click");
  //clog("enteredSku ->", enteredSku);
  if ($("#sku").val()) {
    if (isNaN(qty)) {
      // fetch
      $(confButton).html('<%= I18n.t("helpers.submit.get_item") %>').removeClass('button-inactive');
      setOnEnterKey(function(event){
        if (enteredSku != $("#sku").val()) {
          fetchItem();
        }
      });
      $(confButton).click(function() {
        fetchItem();
      });
    } else {
      // submit
      $(confButton).text('<%= I18n.t("helpers.submit.submit", :model => '') %>').removeClass('button-inactive');
      setOnEnterKey(function(){
        update_real_quantity_submit();
      });
      $(confButton).click(function() {
        update_real_quantity_submit();
      });
    }
  } else {
    // nothing
   $("#quantity").attr('disabled', true);
   $("#quantity_confirm_button").text('<%= I18n.t("helpers.submit.get_item") %>');
   setOnEnterKey(function(){});
   $("#quantity_confirm_button").addClass('button-inactive');
  }
}

function update_real_quantity_submit() {
  var sku = $("#sku").val();
  var qty = $("#quantity").val() //parseInt($("#quantity").val());
  if (qty.length == 0) {
    return;
  }
  $.ajax('/items/update_real_quantity', {
    type: 'POST',
    data: $('#update_real_quantity_form').serialize(),
    success: function(data){
      clearAll();
      focusInput($('#sku'));
      $("#msg").html('<%= I18n.t("system.inventory_updated") %>');
    },
    error: function(){
      $("#msg").html('<%= I18n.t("system.errors.inventory_update_error") %>');
    }
  });

}

function fetchItem() {
  get("/items/item_json?sku=" + $("#sku").val(), "update_real_quantity", function(data){
    enteredSku = $("#sku").val();
    if (data) {
      $("#quantity").attr('disabled', false);
      $("#item_name").text(data.name);
      focusInput($("#quantity"));
    } else {
      $("#msg").html('<%= I18n.t("system.errors.no_such_item") %>');
      $("#quantity").attr('disabled', true);
    }
  });
}

function handleSubmit() {
  fetchItem();
  return false;
}

function clearAll() {
  $("#sku").val('');
  $("#item_name").html('');
  $("#quantity").val('');
  $("#msg").html('&nbsp;');
  enteredSku = "";
  setState();
}
function updateItemQuantities() {
  var dialog = shared.draw.dialog(i18n.items.update_real_quantity.update_quantity,"update_item_quantities_dialog");
  var div = shared.element("div",{id: 'update_item_quantities_dialog_body'},i18n.menu.delete_confirm,dialog);
  div.css({'text-align': 'center','font-size':'200%', 'font-weight': 'bolder'});
  var btn_row = shared.element("div", {id: "_button_row_update_quantities"},'',dialog);
  btn_row.addClass('button-row');
  btn_row.attr("align","right");
  btn_row.css({width: '200px'});
  var no_btn = shared.element("div",{id: "update_item_quantities_dialog_no"},i18n.helpers.submit.cancel,btn_row);
  no_btn.addClass('button-cancel');
  no_btn.on("mousedown",function () {
    dialog.remove();
  });
  var yes_btn = shared.element("div",{id: "update_item_quantities_dialog_yes"},i18n.helpers.submit.ok,btn_row);
  yes_btn.on("mousedown", function () {
    window.location = "/items/move_real_quantity";
  });
  yes_btn.addClass('button-confirm');
  dialog.show();
  shared.helpers.center(dialog);
  shared.helpers.bottom_right($('#_button_row_update_quantities'),$('#update_item_quantities_dialog'));

  
}
</script>
<%= raw content_box_top(I18n.t("headings.update_real_quantity")) %>

<div class='tools'>
  <div class='tool-icon'><%= link_to salor_icon(:location, {}, 32, t('.inventory_report')), items_inventory_report_path %></div>
  <div class='tool-icon' style="margin-left: 200px;"><%= salor_icon(:wand, {:onclick=>"updateItemQuantities();"}, 32, t('.update_quantity')) %></div>
</div>

<div class='clear'></div>
<br />
<br />

<form id="update_real_quantity_form" submit="handleSubmit()">
<input type="hidden" name="format" class="hidden-input" value="js" />
  <table align="center" width="100%">
    <tr>
      <td valign="top" width="60">
        <%= I18n.t("activerecord.attributes.sku") %>
      </td>
      <td valign="top">
        <input type="text" id="sku" name="sku" class="text-input" value="" /> <span id="item_name"/>
      </td>
    </tr>
    <tr>
      <td valign="top">
        <%= I18n.t("activerecord.attributes.quantity") %>
      </td>
      <td valign="top">
        <input id="quantity" type="text" name="quantity" class="text-input" value="" />
      </td>
    </tr>
  </table>
</form>
<div id="msg" class="errors2">&nbsp;</div>
<div class="clear">&nbsp;</div>
<div class="button-row" align="l" width="100%">
    <div id="quantity_reset_button" class="button-cancel"><%= I18n.t("helpers.submit.clear") %></div>
    <div class="spacer">&nbsp;</div>
    <div id="quantity_confirm_button" class="button-confirm"><%= I18n.t("helpers.submit.get_item") %></div>
</div>

<%= raw content_box_bottom %>
