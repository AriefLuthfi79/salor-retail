<script type="text/javascript">

var workstation = <%= workstation? %>;
var mobile = <%= not workstation? %>;
var i18n_pieces = [<%= I18n.t('number.currency.format.pieces', :locale => @region).split(',').find_all { |piece| piece.to_f > 2.0}.join(',') %>];

<%
  if @current_user
    shippers = @current_vendor.shippers.visible
    ships = []
    shippers.each do |ship|
      ships << "<option value='Shipper:#{ship.id}'>#{ship.name}</option>"
    end
    shippers = @current_user.vendors.visible
    shippers.each do |ship|
      ships << "<option value='Vendor:#{ship.id}'>#{ship.name}</option>"
    end
    ships = ships.join(' ')
    inplace_ships = "<select class='inplaceedit'>#{ships}</select>"

    categories = @current_vendor.categories.visible
    cats = []
    categories.each do |cat|
      cats << "<option value='#{cat.id}'>#{cat.name.gsub('"','\"')}</option>"
    end
    cats = cats.join(' ')
    inplace_cats = "<select class='inplaceedit'>#{cats}</select>"

    vendors = @current_user.vendors.visible
    stores = []
    vendors.each do |store|
      stores << "<option value='#{store.id}'>#{store.name}</option>"
    end
    stores = stores.join(' ')
    inplace_stores = "<select class='inplaceedit'>#{stores}</select>"

    locations = @current_vendor.locations.visible
    locs = []
    locations.each do |loc|
      locs << "<option value='#{loc.id}'>#{loc.name}</option>"
    end
    locs = locs.join(' ')
    inplace_locations = "<select class='inplaceedit' >#{locs}</select>"

    item_types = @current_vendor.item_types.visible
    itps = []
    item_types.each do |itp|
      itps << "<option value='#{itp.id}'>#{itp.name}</option>"
    end
    itps = itps.join(' ')
    inplace_itemtypes = "<select class='inplaceedit' >#{itps}</select>"
    
  end
%>

var inplace_ships = "<%= escape_javascript raw inplace_ships %>";
var inplace_cats = "<%= escape_javascript raw inplace_cats %>";
var inplace_cats = "<%= escape_javascript raw inplace_stores %>";
var inplace_locations = "<%= escape_javascript raw inplace_locations %>";
var inplace_itemtypes = "<%= escape_javascript raw inplace_itemtypes %>";
var SaleTypes = <%= raw @current_vendor.sale_types.visible.to_json %>;
var Countries = <%= raw @current_vendor.countries.visible.to_json %>;
var ItemTypes = <%= raw @current_vendor.item_types.visible.to_json %>;
var Categories = <%= raw @current_vendor.categories.visible.to_json %>;
var PaymentMethods = <%= raw @current_vendor.payment_methods_types_list.to_json %>;
var PaymentMethodObjects = <%= raw @current_vendor.payment_methods_as_objects.to_json %>;
var TaxProfiles = <%= raw @current_vendor.json_tax_profiles %>;


window.params = {
  action: "<%= params[:action] %>",
  controller: "<%= params[:controller] %>",
  user: { name: "<%= @current_user.username if @current_user %>" }
};

<% if @current_user then %>
  window.User = <%= raw @current_user.to_json %>;
  window.Drawer = <%= raw @current_user.get_drawer.to_json %>;
<% else %>
  window.User = {};  
  window.Drawer = {};
<% end %>

<% if @current_register then %>
  window.Register = <%= raw @current_register.attributes.to_json %>;
<% else %>
  window.Register = {};
<% end %>


<% unless flash[:notices].blank? %>
  messagesHash['notices'] = messagesHash['notices'].concat(<%= raw flash[:notices].to_json %>;
<% end %>
<% unless flash[:alerts].blank? %>
  messagesHash['alerts'] = messagesHash['alerts'].concat(<%= raw flash[:alerts].to_json %>);
<% end %>
<% unless flash[:prompts].blank? %>
  messagesHash['prompts'] = messagesHash['prompts'].concat(<%= raw flash[:prompts].to_json %>);
<% end %>

<% unless $MESSAGES[:notices].blank? %>
  messagesHash['notices'] = messagesHash['notices'].concat(<%= raw $MESSAGES[:notices].to_json %>);
<% end %>
<% unless $MESSAGES[:alerts].blank? %>
  messagesHash['alerts'] = messagesHash['alerts'].concat(<%= raw $MESSAGES[:alerts].to_json %>);
<% end %>
<% unless $MESSAGES[:prompts].blank? %>
  messagesHash['prompts'] = messagesHash['prompts'].concat(<%= raw $MESSAGES[:prompts].to_json %>);
<% end %>
  

_.templateSettings = {
    interpolate: /\{\{\=(.+?)\}\}/g,
    evaluate: /\{\{(.+?)\}\}/g
};
</script>
