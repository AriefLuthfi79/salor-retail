= raw content_box_top(t("menu.reports"))

= form_tag orders_report_day_path, :class => 'no-print', :id => 'date_range', :method => :get do
  = select_date(@from, :prefix => 'from')
  %select{:id => 'employee_select', :name => 'employee_id' }= options_from_collection_for_select(@employees, 'id', 'name_with_username', params[:employee_id])
  %div.actions
    %p{:align => 'center', :style => 'margin-left:-50px;'}
      = submit_tag t('orders.report.display'), :onclick => '$("#progress").show()'

%img{ :id => 'progress', :src => '/images/upload.gif', :style => 'display: none;' }

%div.tools
  %div.print_report_button{ :onmousedown => 'Salor.printPage();' }
    = salor_icon(:print, {}, 32)

- category_sums_positive_gro = [0]
- category_sums_positive_net = [0]
- category_sums_negative_gro = [0]
- category_sums_negative_net = [0]
- @categories.each do |c|
  - category_sums_positive_gro[c.id] = 0.0
  - category_sums_positive_net[c.id] = 0.0
  - category_sums_negative_gro[c.id] = 0.0
  - category_sums_negative_net[c.id] = 0.0

- taxes_sums_positive_gro = [0]
- taxes_sums_negative_gro = [0]
- @taxes.each do |t|
  - taxes_sums_positive_gro[t.id] = 0.0
  - taxes_sums_negative_gro[t.id] = 0.0

- rebate_total = 0.0

- paymentmethod_positive_sums = Hash.new
- paymentmethod_negative_sums = Hash.new

- @orders.each do |o|
  - o.payment_methods.each do |p|
    - next if p.internal_type == 'InCash'
    - ptype = p.internal_type.to_sym
    - if p.amount > 0
      - if not paymentmethod_positive_sums.has_key?(ptype)
        - paymentmethod_positive_sums.merge! ptype => p.amount
      - else
        - paymentmethod_positive_sums[ptype] += p.amount
    - if p.amount < 0
      - if not paymentmethod_negative_sums.has_key?(ptype)
        - paymentmethod_negative_sums.merge! ptype => p.amount
      - else
        - paymentmethod_negative_sums[ptype] += p.amount

  - o.order_items.each do |oi|
    - cid = oi.category_id
    - cid = 0 if cid.nil?
    - tid = oi.tax_profile_id
    - tid = 0 if tid.nil?
    - item_price = case oi.behavior
      - when 'normal' then oi.price
      - when 'gift_card' then oi.activated ? - oi.total : oi.total
      - when 'coupon' then oi.order_item ? - oi.order_item.coupon_amount : 0
    - item_price = oi.price * ( 1 - oi.rebate / 100.0 ) if oi.rebate
    - item_price = -oi.price if o.buy_order
    - item_total = oi.total_is_locked ? oi.total : item_price * oi.quantity
    - if item_total > 0.0
      - category_sums_positive_gro[cid] += item_total
      - category_sums_positive_net[cid] += item_total / ( 1 + oi.tax_profile_amount / 100 )
      - taxes_sums_positive_gro[tid] += item_total
    - elsif item_total < 0.0
      - category_sums_negative_gro[cid] += item_total
      - category_sums_negative_net[cid] += item_total / ( 1 + oi.tax_profile_amount / 100 )
      - taxes_sums_negative_gro[tid] += item_total


- payout_types_drop_sums = Hash.new
- payout_types_payout_sums = Hash.new
- total_drop = 0
- total_payout = 0

- @drawertransactions.each do |d|
  - payout_types_drop_sums[d.tag.to_sym] = 0
  - payout_types_payout_sums[d.tag.to_sym] = 0

- @drawertransactions.each do |d|
  - key = d.tag ? d.tag.to_sym : 'Bar'
  - if d.drop
    - payout_types_drop_sums[key] += d.amount
    - total_drop += d.amount
  - elsif d.payout
    - payout_types_payout_sums[key] += d.amount
    - total_payout += d.amount

%div.report-container
  %div
    %img.right{ :src => '/images/salor-logo-reports.png'}
    - if Vendor.find_by_id(GlobalData.salor_user.meta.vendor_id).logo_image
      %img.left{ :src => "/vendors/#{ GlobalData.salor_user.meta.vendor_id }/logo_invoice" }
  %div.clear
  %div
    %h2== #{ t '.title' } #{ l @from, :format => :just_day } #{ l Time.now, :format => :time }<br />#{ @vendor.name }<br />#{ @employee.name_with_username }

    %p== #{ t '.count_of_orders' }: #{ @orders.count }

    %h3= t '.sales'

    %table.striped-table2
      %tr
        %th.left= t '.sums_by_category'
        %th.table-center brutto
        %th.table-center netto
      - 0.upto(category_sums_positive_gro.size) do |i|
        - next if category_sums_positive_gro[i].zero?
        %tr
          %td.left= i.zero? ? t('.no_category') : Category.scopied.find_by_id(i).name
          %td.table-center
            = number_to_currency category_sums_positive_gro[i]
            = text_field_tag "category_sums_positive_gro_#{i}", category_sums_positive_gro[i]
          %td.table-center
            = number_to_currency category_sums_positive_net[i]
            = text_field_tag "category_sums_positive_net#{i}", category_sums_positive_net[i]

    %table.striped-table2
      %tr
        %th.left= t '.sums_by_tax_profile'
        %th.table-center brutto
        %th.table-center netto
        %th.table-center Steuer
      - @taxes.each do |t|
        - next if taxes_sums_positive_gro[t.id].zero?
        %tr
          %td.left= t.name
          %td.table-center= number_to_currency taxes_sums_positive_gro[t.id]
          %td.table-center= number_to_currency taxes_sums_positive_gro[t.id] / (1 + t.value / 100 )
          %td.table-center= number_to_currency taxes_sums_positive_gro[t.id] - taxes_sums_positive_gro[t.id] / (1 + t.value / 100 )

    %table.striped-table2
      %tr
        %th.left= t '.sums_by_payment_methods'
        %th.table-center
      - paymentmethod_positive_sums.keys.each do |k|
        - # next if paymentmethod_positive_sums[k].zero?
        %tr
          %td.left= t k
          %td.table-center= number_to_currency paymentmethod_positive_sums[k]
      %tr
        %td.left= t 'InCash'
        %td.table-center= number_to_currency category_sums_positive_gro.compact.sum - paymentmethod_positive_sums.to_a.collect{ |i| i[1] }.sum

    %p== #{ t '.sum_gross' }: #{ number_to_currency category_sums_positive_gro.compact.sum }

    %p== #{ t '.sum_net' }: #{ number_to_currency category_sums_positive_net.compact.sum }




    %h3= t '.payments'

    %table.striped-table2
      %tr
        %th.left= t '.sums_by_category'
        %th.table-center brutto
        %th.table-center netto
      - 0.upto(category_sums_negative_gro.size) do |i|
        - next if category_sums_negative_gro[i].zero?
        %tr
          %td.left= Category.scopied.find_by_id(i).name unless i.zero?
          %td.table-center= number_to_currency category_sums_negative_gro[i]
          %td.table-center= number_to_currency category_sums_negative_net[i]

    %table.striped-table2
      %tr
        %th.left= t '.sums_by_tax_profile'
        %th.table-center brutto
        %th.table-center netto
        %th.table-center Steuer
      - @taxes.each do |t|
        - next if taxes_sums_negative_gro[t.id].zero?
        %tr
          %td.left= t.name
          %td.table-center= number_to_currency taxes_sums_negative_gro[t.id]
          %td.table-center= number_to_currency taxes_sums_negative_gro[t.id] / (1 + t.value / 100 )
          %td.table-center= number_to_currency taxes_sums_negative_gro[t.id] - taxes_sums_negative_gro[t.id] / (1 + t.value / 100 )

    %table.striped-table2
      %tr
        %th.left= t '.sums_by_payment_methods'
        %th.table-center
      - paymentmethod_negative_sums.keys.each do |k|
        %tr
          %td.left= t k
          %td.table-center= number_to_currency paymentmethod_negative_sums[k]
      %tr
        %td.left= t 'InCash'
        %td.table-center= number_to_currency category_sums_negative_gro.compact.sum - paymentmethod_negative_sums.to_a.collect{ |i| i[1] }.sum

    %p== #{ t '.sum_gross' }: #{ number_to_currency category_sums_negative_gro.compact.sum }

    %p== #{ t '.sum_net' }: #{ number_to_currency category_sums_negative_net.compact.sum }




    %h3= t '.revenue'

    %p== #{ t '.gross' }: #{ number_to_currency category_sums_positive_gro.compact.sum + category_sums_negative_gro.compact.sum }

    %p== #{ t '.net' }: #{ number_to_currency category_sums_positive_net.compact.sum + category_sums_negative_net.compact.sum }



          
    %h3= t '.transactions'
    %table.striped-table2
      %tr
        %th.left= t '.drops'
        %th.right
      - payout_types_drop_sums.keys.each do |k|
        - next if payout_types_drop_sums[k].zero?
        %tr
          %td.left= t k.to_s
          %td.right= number_to_currency payout_types_drop_sums[k]


    %table.striped-table2
      %tr
        %th.left= t '.payouts'
        %th.right
      - payout_types_payout_sums.keys.each do |k|
        - next if payout_types_payout_sums[k].zero?
        %tr
          %td.left= t k.to_s
          %td.right= number_to_currency payout_types_payout_sums[k]


    %table.striped-table2
      %tr
        %th.left= t '.transaction_tag'
        %th.left
        %th.left= t '.time'
        %th.right= t '.drop'
        %th.right= t '.payout'
      - @drawertransactions.each do |d|
        - next if d.tag == 'CompleteOrder'
        %tr
          %td.left= t ('.' + d.tag)
          %td.left= d.notes
          %td.left= l d.created_at, :format => :just_time
          %td.right= number_to_currency d.amount if d.drop
          %td.right= number_to_currency d.amount if d.payout

    %p== #{ t '.sum_transactions' }: #{ number_to_currency total_drop - total_payout }


    %h3= t '.cash_drawer'

    %p== #{ I18n.t("printr.eod_report.system_drawer_amount") }: #{ number_to_currency $User.get_drawer.amount }

    - calculated_drawer_amount = total_drop - total_payout + category_sums_positive_gro.compact.sum - paymentmethod_positive_sums.to_a.collect{ |i| i[1] }.sum + category_sums_negative_gro.compact.sum - paymentmethod_negative_sums.to_a.collect{ |i| i[1] }.sum

    %p== #{ I18n.t("printr.eod_report.calculated_drawer_amount") }: #{ number_to_currency calculated_drawer_amount }

    - if $User.get_drawer.amount != 0 or calculated_drawer_amount != 0
      %p
        %b= t 'printr.eod_report.warning_drawer_amount_not_zero'

